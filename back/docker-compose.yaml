version: '3'

services: #containers

########################### PHP ###########

  php_library:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    container_name: php_library
    volumes:
      - ./:/var/www/library
      - ./docker/xdebug/90-xdebug.ini:/usr/local/etc/php/conf.d/90-xdebug.ini
    working_dir: /var/www/library
    networks:
      - library_network

########### SERVER ########################
#
  nginx_library:
    image: nginx:latest
    container_name: nginx_library
    ports:
      - "8084:80"
    volumes:
      - ./:/var/www/library
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - library_network
    expose:
      - 8084

############################## Data Base ###########
  postgresql_library:
    build:
      context: ./docker/db_conf
      dockerfile: Dockerfile
    container_name: postgresql_library
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=library_db
    restart: unless-stopped
    volumes:
      - ./docker/pgdata:/var/lib/postgresql/data
    tty: true
    networks:
      - library_network
    expose:
      - 5432

  ######################## COMPOSER #########

  composer_library:
    build:
      context: ./docker/composer
      dockerfile: Dockerfile
    container_name: composer_library
    volumes:
      - ./:/var/www/library
      - ./docker/composer/cache:/root/.composer/cache
    working_dir: /var/www/library
    depends_on:
      - php_library
    networks:
      - library_network

  ################## ARTISAN ##############

  artisan_library:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: artisan_library
    volumes:
      - ./:/var/www/library
    depends_on:
      - postgresql_library
      - composer_library
    working_dir: /var/www/library
    entrypoint: ["php", "artisan"]
    command: ["queue:work"]
    restart: always
    networks:
      - library_network

############### redis ###########################

  redis_library:
    image: 'redis:alpine'
    container_name: redis_library
    ports:
      - "6390:6379"
    restart: unless-stopped
    networks:
      - library_network
    expose:
      - 6390

####################### node #######

  node:
    image: node
    container_name: npm_library
    volumes:
      - ./:/var/www/library
    working_dir: /var/www/library
    networks:
      - library_network

networks:
  library_network:
    external: true
